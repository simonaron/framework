module TASK_BUILDER {
	import from TASK all;
	import from INTERFACE_STORE all;

	type record
	RT_TASK_BUILDER_TaskBuilderParameter {
	  charstring Name,
	  charstring Value
	}
	
	type set of RT_TASK_BUILDER_TaskBuilderParameter
	RT_TASK_BUILDER_TaskBuilderParameters;

	function f_TaskBuilderParameters_getValueOf(RT_TASK_BUILDER_TaskBuilderParameters r_parameters, charstring v_name) 
	return charstring {
		for(var integer i := 0; i<sizeof(r_parameters); i := i + 1) {
		  if(r_parameters[i].Name == v_name) {
		    return r_parameters[i].Value;
		  }
		}
		// TODO error catch
		return ""
	}

	type record
	RT_TASK_BUILDER_TaskBuilderMission {
		charstring 		TaskName,
		RT_TASK_BUILDER_TaskBuilderParameters Parameters,
		CT_TASK_Task 	CreatedTask optional
	}

	type port
	PT_TASK_BUILDER_TaskBuilderPort message {
		inout RT_TASK_BUILDER_TaskBuilderMission
	} with { extension "internal" }

	type component
	CT_TASK_BUILDER_TaskBuilder extends CT_TASK_Task {
		port PT_TASK_BUILDER_TaskBuilderPort p_taskBuilderPort;
		port PT_INTERFACE_STORE_InterfaceStorePort p_interfaceStore;
	}
}
