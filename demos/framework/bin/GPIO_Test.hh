// This C++ header file was generated by the TTCN-3 compiler
// of the TTCN-3 Test Executor version CRL 113 200/6 R3A
// for  (pi@pi-02) on Sat Apr 21 19:03:51 2018

// Copyright (c) 2000-2017 Ericsson Telecom AB

// Do not edit this file unless you know what you are doing.

#ifndef GPIO__Test_HH
#define GPIO__Test_HH

#ifdef TITAN_RUNTIME_2
#error Generated code does not match with used runtime.\
 Code was generated without -R option but -DTITAN_RUNTIME_2 was used.
#endif

/* Header file includes */

#include <TTCN3.hh>
#include "GPIO.hh"
#include "TASK_BUILDER.hh"
#include "INTERFACE_STORE.hh"

#if TTCN3_VERSION != 60300
#error Version mismatch detected.\
 Please check the version of the TTCN-3 compiler and the base library.\
 Run make clean and rebuild the project if the version of the compiler changed recently.
#endif

#ifndef LINUX
#error This file should be compiled on LINUX
#endif

namespace GPIO__Test {

/* Type definitions */

typedef COMPONENT CT__GPIO__TEST__TaskBuilder;
typedef COMPONENT_template CT__GPIO__TEST__TaskBuilder_template;

/* Function prototypes */

extern verdicttype testcase_tc__GPIO__UnitTest____Device____receive__value(boolean has_timer, double timer_value);
extern verdicttype testcase_tc__GPIO__UnitTest____Controller____receive__value(boolean has_timer, double timer_value);
extern verdicttype testcase_tc__GPIO__UnitTest____TaskBuilder____create__task__with__builder(boolean has_timer, double timer_value);
extern verdicttype testcase_tc__GPIO__UnitTest____TaskBuilder____parametrised__performance(const INTEGER& sum, boolean has_timer, double timer_value);

/* Global variable declarations */

extern const TTCN_Typedescriptor_t& CT__GPIO__TEST__TaskBuilder_descr_;
extern TASK__BUILDER::PT__TASK__BUILDER__TaskBuilderPort CT__GPIO__TEST__TaskBuilder_component_p__taskBuilderPort;
extern TASK::PT__TASK__TaskExecutorPort CT__GPIO__TEST__TaskBuilder_component_p__task;
extern INTERFACE__STORE::PT__INTERFACE__STORE__InterfaceStorePort CT__GPIO__TEST__TaskBuilder_component_p__interfaceStorePort;
extern TTCN_Module module_object;

} /* end of namespace */

#endif
