// This C++ source file was generated by the TTCN-3 compiler
// of the TTCN-3 Test Executor version CRL 113 200/6 R3A
// for  (pi@pi-02) on Sat Apr 21 19:03:51 2018

// Copyright (c) 2000-2017 Ericsson Telecom AB

// Do not edit this file unless you know what you are doing.

/* Including header files */

#include "INTERFACE_STORE_Test.hh"

namespace INTERFACE__STORE__Test {

/* Prototypes of static functions */

static void pre_init_module();
static void post_init_module();
static boolean init_comp_type(const char *component_type, boolean init_base_comps);
static void module_control_part();

/* Literal string constants */

static const CHARSTRING cs_2(15, "Element create!"),
cs_4(14, "Element found!"),
cs_0(9, "MyElement"),
cs_3(15, "MyElement OTHER"),
cs_1(17, "No element found!");
static const unsigned char module_checksum[] = { 0x6f, 0x84, 0x8c, 0x31, 0x85, 0x9c, 0xb7, 0x7c, 0x07, 0xe1, 0x56, 0x73, 0x76, 0xd6, 0x49, 0x99 };

/* Global variable definitions */

const TTCN_Typedescriptor_t& CT__TEST__InterfaceStore_descr_ = COMPONENT_descr_;
INTERFACE__STORE::PT__INTERFACE__STORE__InterfaceStorePort CT__TEST__InterfaceStore_component_p__interfaceStore("p_interfaceStore");
TTCN_Module module_object("INTERFACE_STORE_Test", __DATE__, __TIME__, module_checksum, pre_init_module, NULL, 0U, 4294967295U, 4294967295U, 4294967295U, NULL, 0LU, 0, post_init_module, NULL, NULL, NULL, init_comp_type, NULL, module_control_part);

static const RuntimeVersionChecker ver_checker(  current_runtime_version.requires_major_version_6,
  current_runtime_version.requires_minor_version_3,
  current_runtime_version.requires_patch_level_0,  current_runtime_version.requires_runtime_1);

/* Bodies of functions, altsteps and testcases */

verdicttype testcase_tc__INTERFACE__STORE__UnitTest____InterfaceStore____no__element__found(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("INTERFACE_STORE_Test.ttcn", 13, TTCN_Location::LOCATION_TESTCASE, "tc_INTERFACE_STORE_UnitTest__InterfaceStore__no_element_found");
try {
TTCN_Runtime::begin_testcase("INTERFACE_STORE_Test", "tc_INTERFACE_STORE_UnitTest__InterfaceStore__no_element_found", "INTERFACE_STORE_Test", "CT_TEST_InterfaceStore", "INTERFACE_STORE_Test", "CT_TEST_InterfaceStore", has_timer, timer_value);
current_location.update_lineno(14);
/* INTERFACE_STORE_Test.ttcn, line 14 */
TEST__API__Functions::f__TEST__API__UnitTest__Start();
current_location.update_lineno(16);
/* INTERFACE_STORE_Test.ttcn, line 16 */
COMPONENT interfaceStore(TTCN_Runtime::create_component("INTERFACE_STORE", "CT_INTERFACE_STORE_InterfaceStore", NULL, NULL, TRUE));
current_location.update_lineno(17);
/* INTERFACE_STORE_Test.ttcn, line 17 */
TEST__API__Functions::f__TEST__API__Watcher__watch(interfaceStore);
current_location.update_lineno(19);
/* INTERFACE_STORE_Test.ttcn, line 19 */
TTCN_Runtime::connect_port(self, CT__TEST__InterfaceStore_component_p__interfaceStore.get_name(), interfaceStore, INTERFACE__STORE::CT__INTERFACE__STORE__InterfaceStore_component_p__interfaceStoreClient.get_name());
current_location.update_lineno(20);
/* INTERFACE_STORE_Test.ttcn, line 20 */
INTERFACE__STORE::start_f__INTERFACE__STORE__InterfaceStore(interfaceStore);
current_location.update_lineno(22);
/* INTERFACE_STORE_Test.ttcn, line 22 */
{
INTERFACE__STORE::RT__INTERFACE__STORE__InterfaceElement_template tmp_0;
tmp_0.Name() = cs_0;
tmp_0.Device() = OMIT_VALUE;
tmp_0.Controller() = OMIT_VALUE;
CT__TEST__InterfaceStore_component_p__interfaceStore.send(tmp_0);
}
current_location.update_lineno(24);
/* INTERFACE_STORE_Test.ttcn, line 24 */
TEST__API__Functions::f__TEST__API__Watcher__getverdict(FAIL, cs_1, TEST__API__Functions::f__TEST__API__Watcher__getverdict_new__timeout_defval);
current_location.update_lineno(26);
/* INTERFACE_STORE_Test.ttcn, line 26 */
TEST__API__Functions::f__TEST__API__UnitTest__Finished();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case tc_INTERFACE_STORE_UnitTest__InterfaceStore__no_element_found was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_tc__INTERFACE__STORE__UnitTest____InterfaceStore____create__element(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("INTERFACE_STORE_Test.ttcn", 29, TTCN_Location::LOCATION_TESTCASE, "tc_INTERFACE_STORE_UnitTest__InterfaceStore__create_element");
try {
TTCN_Runtime::begin_testcase("INTERFACE_STORE_Test", "tc_INTERFACE_STORE_UnitTest__InterfaceStore__create_element", "INTERFACE_STORE_Test", "CT_TEST_InterfaceStore", "INTERFACE_STORE_Test", "CT_TEST_InterfaceStore", has_timer, timer_value);
current_location.update_lineno(30);
/* INTERFACE_STORE_Test.ttcn, line 30 */
TEST__API__Functions::f__TEST__API__UnitTest__Start();
current_location.update_lineno(32);
/* INTERFACE_STORE_Test.ttcn, line 32 */
COMPONENT interfaceStore(TTCN_Runtime::create_component("INTERFACE_STORE", "CT_INTERFACE_STORE_InterfaceStore", NULL, NULL, TRUE));
current_location.update_lineno(33);
/* INTERFACE_STORE_Test.ttcn, line 33 */
TEST__API__Functions::f__TEST__API__Watcher__watch(interfaceStore);
current_location.update_lineno(35);
/* INTERFACE_STORE_Test.ttcn, line 35 */
TTCN_Runtime::connect_port(self, CT__TEST__InterfaceStore_component_p__interfaceStore.get_name(), interfaceStore, INTERFACE__STORE::CT__INTERFACE__STORE__InterfaceStore_component_p__interfaceStoreClient.get_name());
current_location.update_lineno(36);
/* INTERFACE_STORE_Test.ttcn, line 36 */
INTERFACE__STORE::start_f__INTERFACE__STORE__InterfaceStore(interfaceStore);
current_location.update_lineno(38);
/* INTERFACE_STORE_Test.ttcn, line 38 */
COMPONENT newDevice(TTCN_Runtime::create_component("GPIO_Definitions", "CT_GPIO_Device", NULL, NULL, FALSE));
current_location.update_lineno(39);
/* INTERFACE_STORE_Test.ttcn, line 39 */
{
INTERFACE__STORE::RT__INTERFACE__STORE__InterfaceElement_template tmp_1;
tmp_1.Name() = cs_0;
tmp_1.Device().UV__GPIO() = newDevice;
tmp_1.Controller() = OMIT_VALUE;
CT__TEST__InterfaceStore_component_p__interfaceStore.send(tmp_1);
}
current_location.update_lineno(41);
/* INTERFACE_STORE_Test.ttcn, line 41 */
TEST__API__Functions::f__TEST__API__Watcher__getverdict(PASS, cs_2, TEST__API__Functions::f__TEST__API__Watcher__getverdict_new__timeout_defval);
current_location.update_lineno(43);
/* INTERFACE_STORE_Test.ttcn, line 43 */
TEST__API__Functions::f__TEST__API__UnitTest__Finished();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case tc_INTERFACE_STORE_UnitTest__InterfaceStore__create_element was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_tc__INTERFACE__STORE__UnitTest____InterfaceStore____create__2__element__then__found(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("INTERFACE_STORE_Test.ttcn", 46, TTCN_Location::LOCATION_TESTCASE, "tc_INTERFACE_STORE_UnitTest__InterfaceStore__create_2_element_then_found");
try {
TTCN_Runtime::begin_testcase("INTERFACE_STORE_Test", "tc_INTERFACE_STORE_UnitTest__InterfaceStore__create_2_element_then_found", "INTERFACE_STORE_Test", "CT_TEST_InterfaceStore", "INTERFACE_STORE_Test", "CT_TEST_InterfaceStore", has_timer, timer_value);
current_location.update_lineno(47);
/* INTERFACE_STORE_Test.ttcn, line 47 */
TEST__API__Functions::f__TEST__API__UnitTest__Start();
current_location.update_lineno(49);
/* INTERFACE_STORE_Test.ttcn, line 49 */
COMPONENT interfaceStore(TTCN_Runtime::create_component("INTERFACE_STORE", "CT_INTERFACE_STORE_InterfaceStore", NULL, NULL, TRUE));
current_location.update_lineno(50);
/* INTERFACE_STORE_Test.ttcn, line 50 */
TEST__API__Functions::f__TEST__API__Watcher__watch(interfaceStore);
current_location.update_lineno(52);
/* INTERFACE_STORE_Test.ttcn, line 52 */
TTCN_Runtime::connect_port(self, CT__TEST__InterfaceStore_component_p__interfaceStore.get_name(), interfaceStore, INTERFACE__STORE::CT__INTERFACE__STORE__InterfaceStore_component_p__interfaceStoreClient.get_name());
current_location.update_lineno(53);
/* INTERFACE_STORE_Test.ttcn, line 53 */
INTERFACE__STORE::start_f__INTERFACE__STORE__InterfaceStore(interfaceStore);
current_location.update_lineno(55);
/* INTERFACE_STORE_Test.ttcn, line 55 */
COMPONENT newDevice(TTCN_Runtime::create_component("GPIO_Definitions", "CT_GPIO_Device", NULL, NULL, FALSE));
current_location.update_lineno(56);
/* INTERFACE_STORE_Test.ttcn, line 56 */
{
INTERFACE__STORE::RT__INTERFACE__STORE__InterfaceElement_template tmp_2;
tmp_2.Name() = cs_0;
tmp_2.Device().UV__GPIO() = newDevice;
tmp_2.Controller() = OMIT_VALUE;
CT__TEST__InterfaceStore_component_p__interfaceStore.send(tmp_2);
}
current_location.update_lineno(58);
/* INTERFACE_STORE_Test.ttcn, line 58 */
TEST__API__Functions::f__TEST__API__Watcher__getverdict(PASS, cs_2, TEST__API__Functions::f__TEST__API__Watcher__getverdict_new__timeout_defval);
current_location.update_lineno(60);
/* INTERFACE_STORE_Test.ttcn, line 60 */
{
INTERFACE__STORE::RT__INTERFACE__STORE__InterfaceElement_template tmp_3;
tmp_3.Name() = cs_3;
tmp_3.Device().UV__GPIO() = newDevice;
tmp_3.Controller() = OMIT_VALUE;
CT__TEST__InterfaceStore_component_p__interfaceStore.send(tmp_3);
}
current_location.update_lineno(62);
/* INTERFACE_STORE_Test.ttcn, line 62 */
TEST__API__Functions::f__TEST__API__Watcher__getverdict(PASS, cs_2, TEST__API__Functions::f__TEST__API__Watcher__getverdict_new__timeout_defval);
current_location.update_lineno(64);
/* INTERFACE_STORE_Test.ttcn, line 64 */
{
INTERFACE__STORE::RT__INTERFACE__STORE__InterfaceElement_template tmp_4;
tmp_4.Name() = cs_0;
tmp_4.Device() = OMIT_VALUE;
tmp_4.Controller() = OMIT_VALUE;
CT__TEST__InterfaceStore_component_p__interfaceStore.send(tmp_4);
}
current_location.update_lineno(66);
/* INTERFACE_STORE_Test.ttcn, line 66 */
TEST__API__Functions::f__TEST__API__Watcher__getverdict(PASS, cs_4, TEST__API__Functions::f__TEST__API__Watcher__getverdict_new__timeout_defval);
current_location.update_lineno(68);
/* INTERFACE_STORE_Test.ttcn, line 68 */
TIMER t("t");
current_location.update_lineno(68);
/* INTERFACE_STORE_Test.ttcn, line 68 */
t.start(1.0);
current_location.update_lineno(69);
/* INTERFACE_STORE_Test.ttcn, line 69 */
INTERFACE__STORE::RT__INTERFACE__STORE__InterfaceElement receivedElement;
current_location.update_lineno(70);
/* INTERFACE_STORE_Test.ttcn, line 70 */
{
tmp_5:
alt_status tmp_5_alt_flag_0 = ALT_MAYBE;
alt_status tmp_5_alt_flag_1 = ALT_MAYBE;
alt_status tmp_5_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_5_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(71);
/* INTERFACE_STORE_Test.ttcn, line 71 */
{
INTERFACE__STORE::RT__INTERFACE__STORE__InterfaceElement_template tmp_6;
tmp_6.Name() = cs_0;
tmp_6.Device() = ANY_VALUE;
tmp_6.Controller() = OMIT_VALUE;
tmp_5_alt_flag_0 = CT__TEST__InterfaceStore_component_p__interfaceStore.receive(tmp_6, &(receivedElement), any_compref, NULL, NULL);
}
if (tmp_5_alt_flag_0 == ALT_YES) {
current_location.update_lineno(74);
/* INTERFACE_STORE_Test.ttcn, line 74 */
COMPONENT receivedDevice(const_cast< const INTERFACE__STORE::RT__INTERFACE__STORE__InterfaceElement&>(receivedElement).Device()().UV__GPIO());
current_location.update_lineno(75);
/* INTERFACE_STORE_Test.ttcn, line 75 */
COMPONENT newController(TTCN_Runtime::create_component("GPIO_Definitions", "CT_GPIO_Controller", NULL, NULL, FALSE));
current_location.update_lineno(77);
/* INTERFACE_STORE_Test.ttcn, line 77 */
TTCN_Runtime::connect_port(receivedDevice, GPIO__Definitions::CT__GPIO__Device_component_controller.get_name(), newController, GPIO__Definitions::CT__GPIO__Controller_component_device.get_name());
current_location.update_lineno(79);
/* INTERFACE_STORE_Test.ttcn, line 79 */
TTCN_Runtime::setverdict(PASS,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("TEST: Element received!"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_5_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(81);
/* INTERFACE_STORE_Test.ttcn, line 81 */
tmp_5_alt_flag_1 = t.timeout(NULL);
if (tmp_5_alt_flag_1 == ALT_YES) {
current_location.update_lineno(82);
/* INTERFACE_STORE_Test.ttcn, line 82 */
TTCN_Runtime::setverdict(FAIL,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("TEST: Receive timeout!"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_5_default_flag == ALT_MAYBE) {
tmp_5_default_flag = TTCN_Default::try_altsteps();
if (tmp_5_default_flag == ALT_YES || tmp_5_default_flag == ALT_BREAK) break;
else if (tmp_5_default_flag == ALT_REPEAT) goto tmp_5;
}
current_location.update_lineno(70);
/* INTERFACE_STORE_Test.ttcn, line 70 */
if (tmp_5_alt_flag_0 == ALT_NO && tmp_5_alt_flag_1 == ALT_NO && tmp_5_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file INTERFACE_STORE_Test.ttcn between lines 70 and 84.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(85);
/* INTERFACE_STORE_Test.ttcn, line 85 */
TEST__API__Functions::f__TEST__API__UnitTest__Finished();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case tc_INTERFACE_STORE_UnitTest__InterfaceStore__create_2_element_then_found was stopped.");
}
return TTCN_Runtime::end_testcase();
}


/* Bodies of static functions */

static void pre_init_module()
{
TTCN_Location current_location("INTERFACE_STORE_Test.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "INTERFACE_STORE_Test");
INTERFACE__STORE::module_object.pre_init_module();
GPIO::module_object.pre_init_module();
module_object.add_testcase_nonpard("tc_INTERFACE_STORE_UnitTest__InterfaceStore__no_element_found", testcase_tc__INTERFACE__STORE__UnitTest____InterfaceStore____no__element__found);
module_object.add_testcase_nonpard("tc_INTERFACE_STORE_UnitTest__InterfaceStore__create_element", testcase_tc__INTERFACE__STORE__UnitTest____InterfaceStore____create__element);
module_object.add_testcase_nonpard("tc_INTERFACE_STORE_UnitTest__InterfaceStore__create_2_element_then_found", testcase_tc__INTERFACE__STORE__UnitTest____InterfaceStore____create__2__element__then__found);
}

static void post_init_module()
{
TTCN_Location current_location("INTERFACE_STORE_Test.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "INTERFACE_STORE_Test");
INTERFACE__STORE::module_object.post_init_module();
GPIO::module_object.post_init_module();
}

static boolean init_comp_type(const char *component_type, boolean init_base_comps)
{
(void)init_base_comps;
if (!strcmp(component_type, "CT_TEST_InterfaceStore")) {
if (init_base_comps) {
Module_List::initialize_component("TEST_Definitions", "CT_TEST_Subject", FALSE);
Module_List::initialize_component("TEST_Definitions", "CT_TEST_Watcher", FALSE);
}
CT__TEST__InterfaceStore_component_p__interfaceStore.activate_port();
return TRUE;
} else return FALSE;
}

static void module_control_part()
{
TTCN_Location current_location("INTERFACE_STORE_Test.ttcn", 88, TTCN_Location::LOCATION_CONTROLPART, "INTERFACE_STORE_Test");
TTCN_Runtime::begin_controlpart("INTERFACE_STORE_Test");
current_location.update_lineno(89);
/* INTERFACE_STORE_Test.ttcn, line 89 */
testcase_tc__INTERFACE__STORE__UnitTest____InterfaceStore____no__element__found(FALSE, 0.0);
current_location.update_lineno(90);
/* INTERFACE_STORE_Test.ttcn, line 90 */
testcase_tc__INTERFACE__STORE__UnitTest____InterfaceStore____create__element(FALSE, 0.0);
current_location.update_lineno(91);
/* INTERFACE_STORE_Test.ttcn, line 91 */
testcase_tc__INTERFACE__STORE__UnitTest____InterfaceStore____create__2__element__then__found(FALSE, 0.0);
TTCN_Runtime::end_controlpart();
}


} /* end of namespace */
